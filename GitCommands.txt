mkdir-->make directory
cd --> change directory
ls --> list files in folder
======================
	git --version  --> to know the version of the git
	git init             --> Initialized empty Git repository in C:/Users/mohamed.nader/Desktop/myproject/.git/
	git status       --> check the Git status and see if it is a part of our repo:

/*
Files in your Git repository folder can be in one of 2 states:
Tracked - files that Git knows about and are added to the repository
Untracked - files that are in your working directory, but not added to the repository
*/
---------------------------------------------------------------------------------------------------------------------
#Git Staging Environment
	git add index.html
#Git Commit
     /*we are ready move from stage to commit for our repo.*/
 	git commit -m "first release of hello world!"
Commit the updated files directly, skipping the staging environment:
	git commit -a -m "New Line Added"
	git status --short
/*
Note: Short status flags are:
----------------------------------------
?? - Untracked files
A - Files added to stage
M - Modified files
D - Deleted files
*/
#Git Commit Log
-----------------------
	 git log
#Git Help
-------------
	git command -help    -  See all the available options for the specific command
	git help --all                  -  See all possible commands
---------------------------------------------------------------------------------------------------------------------------
#Git Branch
-----------------
/*
a branch is a new/separate version of the main repository
*/
	git branch hello-world-images
	git branch
	git checkout hello-world-images
/*
checkout 
is the command used to check out a branch.
 Moving us from the current branch, to the one specified at the end of the command:
*/
#Emergency Branch
-----------------------------
git checkout -b emergency-fix

#Git Branch Merge
Now we merge the current branch (master) with emergency-fix:
	git checkout master
	git merge emergency-fix

we can delete emergency-fix, as it is no longer needed:
	git branch -d emergency-fix
	git checkout hello-world-images
------------------------------------
Git GitHub Getting Started
---------------------------
	git remote add origin https://github.com/Muhammad-Nader/hello-world.git
/*
git remote add origin URL specifies that you are adding a remote repository, with the specified URL, as an origin to your local Git repo.
*/
	git push --set-upstream origin master
#Git GitHub Edit Code
#Git Pull from GitHub
/*
pull is a combination of 2 different commands:
fetch
merge
*/
Git Fetch
	git fetch origin
	git status
	git log origin/master
	git diff origin/master
Git Merge
	git merge origin/master
	git status
Git Pull
	git pull origin
-----------------------------------------------
Git Push to GitHub
------------------
	git commit -a -m "Updated index.html. Resized image"
	git status
	git push origin
Git GitHub Branch
------------------



Pulling a Branch from GitHub
	git pull
	git status
	git branch
	git branch -a
Note: branch -r is for remote branches only.
	git checkout html-skeleton
	git pull
	git branch
Git Push Branch to GitHub
	git checkout -b update-readme
	git add README.md
	git status
	git commit -m "Updated readme for GitHub Branches"